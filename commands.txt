cd go/src/github.com/AngelineReetuA/fabric-samples/test-network

./network.sh up createChannel -c mychannel -ca && ./network.sh deployCC -ccn basic -ccp /home/angeline-reetu/chaincodes/chaincode-javascript -ccl javascript

export PATH=${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=$PWD/../config/
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export CORE_PEER_ADDRESS=localhost:7051

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InitLedger","Args":[]}'

// To get all current customers in the state
peer chaincode query -C mychannel -n basic -c '{"Args":["GetAllUsers"]}'

// To insert a new customer
peer chaincode query -C mychannel -n basic -c '{"Args":["AddNewCustomer","KRA2","customer23789","Delwin","d@gmail.com","87654345675","panno7654","dummyHash123"]}'
// Returns the string details of new users

// To retrieve details of existing customer
peer chaincode query -C mychannel -n basic -c '{"Args":["RetrieveDetails","customer12345"]}'

// To update details of existing customer
peer chaincode query -C mychannel -n basic -c '{"Args":["UpdateDetails","KRA1","customer12345","Amanda","amanda@gmail.com","9876543219","23gh56ju","dummyhash123"]}'
// Returns "Updated successfully"

// To delete customer
peer chaincode query -C mychannel -n basic -c '{"Args":["DeleteData","customer12345"]}'

// To check if data exists
peer chaincode query -C mychannel -n basic -c '{"Args":["DataExists","customer12345"]}'
// Returns boolean 




